name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-14  # M1 runner
            goos: darwin
            goarch: arm64
            suffix: -darwin-arm64
          - os: macos-13  # Intel Mac
            goos: darwin
            goarch: amd64
            suffix: -darwin-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            suffix: -linux-amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
            suffix: -windows-amd64.exe
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -o toke${{ matrix.suffix }} -ldflags "-X main.Version=${{ github.ref_name }}" .
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: toke${{ matrix.suffix }}
        path: toke${{ matrix.suffix }}

  build-mlx-server:
    runs-on: macos-14  # M1 runner for MLX
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Build MLX server bundle
      run: |
        chmod +x scripts/build-mlx-server.sh
        scripts/build-mlx-server.sh
    
    - name: Upload MLX server bundle
      uses: actions/upload-artifact@v4
      with:
        name: mlx-server-darwin-arm64
        path: build-mlx-server/mlx-server-darwin-arm64.tar.gz

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, build-mlx-server]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          toke-*/*
          mlx-server-*/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}