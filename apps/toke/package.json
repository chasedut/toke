{
  "name": "@toke/cli",
  "version": "0.42.4",
  "private": true,
  "description": "Toke CLI application",
  "scripts": {
    "build": "go build -o build/toke",
    "build:release": "go build -ldflags='-s -w' -o build/toke",
    "build:all": "./build-all-platforms.sh",
    "build:darwin-amd64": "GOOS=darwin GOARCH=amd64 go build -ldflags='-s -w' -o build/toke-darwin-amd64",
    "build:darwin-arm64": "GOOS=darwin GOARCH=arm64 go build -ldflags='-s -w' -o build/toke-darwin-arm64",
    "build:linux-amd64": "GOOS=linux GOARCH=amd64 go build -ldflags='-s -w' -o build/toke-linux-amd64",
    "build:linux-arm64": "GOOS=linux GOARCH=arm64 go build -ldflags='-s -w' -o build/toke-linux-arm64",
    "build:windows-amd64": "GOOS=windows GOARCH=amd64 go build -ldflags='-s -w' -o build/toke-windows-amd64.exe",
    "build:windows-386": "GOOS=windows GOARCH=386 go build -ldflags='-s -w' -o build/toke-windows-386.exe",
    "build:windows-arm64": "GOOS=windows GOARCH=arm64 go build -ldflags='-s -w' -o build/toke-windows-arm64.exe",
    "dev": "go run main.go",
    "test": "go test ./...",
    "test:coverage": "go test -coverprofile=coverage.out ./... && go tool cover -html=coverage.out",
    "lint": "golangci-lint run",
    "typecheck": "go build -o /dev/null ./...",
    "clean": "rm -rf build dist coverage.out",
    "install:local": "go build -o build/toke && sudo cp build/toke /usr/local/bin/",
    "deps:check": "go run main.go deps check",
    "deps:install": "go run main.go deps install",
    "deps:update": "go run main.go deps update"
  }
}